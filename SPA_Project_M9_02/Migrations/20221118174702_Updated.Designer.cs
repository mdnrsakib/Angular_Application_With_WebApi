// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPA_Project_M9_02.Models;

#nullable disable

namespace SPA_Project_M9_02.Migrations
{
    [DbContext(typeof(TravelTourDbContext))]
    [Migration("20221118174702_Updated")]
    partial class Updated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SPA_Project_M9_02.Models.AgentTourPackage", b =>
                {
                    b.Property<int>("TravelAgentId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("TravelAgentId", "TourPackageId");

                    b.HasIndex("TourPackageId");

                    b.ToTable("AgentTourPackages");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.PackageFeature", b =>
                {
                    b.Property<int>("PackageFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageFeatureId"), 1L, 1);

                    b.Property<string>("HotelBooking")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int");

                    b.Property<int>("TransportMode")
                        .HasColumnType("int");

                    b.HasKey("PackageFeatureId");

                    b.HasIndex("TourPackageId");

                    b.ToTable("PackageFeatures");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.Tourist", b =>
                {
                    b.Property<int>("TouristId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TouristId"), 1L, 1);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int");

                    b.Property<string>("TouristName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TouristOccupation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TouristPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TouristId");

                    b.HasIndex("TourPackageId");

                    b.ToTable("Tourists");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.TourPackage", b =>
                {
                    b.Property<int>("TourPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourPackageId"), 1L, 1);

                    b.Property<decimal>("CostPerPerson")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PackageCategory")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TourTime")
                        .HasColumnType("int");

                    b.HasKey("TourPackageId");

                    b.ToTable("TourPackages");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.TravelAgent", b =>
                {
                    b.Property<int>("TravelAgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelAgentId"), 1L, 1);

                    b.Property<string>("AgentAddress")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TravelAgentId");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.AgentTourPackage", b =>
                {
                    b.HasOne("SPA_Project_M9_02.Models.TourPackage", "TourPackages")
                        .WithMany("AgentTourPackages")
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPA_Project_M9_02.Models.TravelAgent", "TravelAgents")
                        .WithMany("AgentTourPackages")
                        .HasForeignKey("TravelAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourPackages");

                    b.Navigation("TravelAgents");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.PackageFeature", b =>
                {
                    b.HasOne("SPA_Project_M9_02.Models.TourPackage", "TourPackages")
                        .WithMany("PackageFeatures")
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourPackages");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.Tourist", b =>
                {
                    b.HasOne("SPA_Project_M9_02.Models.TourPackage", "TourPackages")
                        .WithMany("Tourists")
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourPackages");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.TourPackage", b =>
                {
                    b.Navigation("AgentTourPackages");

                    b.Navigation("PackageFeatures");

                    b.Navigation("Tourists");
                });

            modelBuilder.Entity("SPA_Project_M9_02.Models.TravelAgent", b =>
                {
                    b.Navigation("AgentTourPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
